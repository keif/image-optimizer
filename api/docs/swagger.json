{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "High-performance image optimization service with format conversion, resizing, and quality adjustment",
        "title": "Image Optimizer API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/keif/image-optimizer/issues",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/keys": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all API keys (excluding actual key values for security)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "List all API keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.APIKey"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new API key with a given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Create a new API key",
                "parameters": [
                    {
                        "description": "API key name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.APIKey"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/keys/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Revoke an API key by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Revoke an API key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "API Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/batch-optimize": {
            "post": {
                "description": "Optimize multiple image files with the same quality, dimensions, and format settings",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "optimization"
                ],
                "summary": "Optimize multiple images in a single request",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 80,
                        "description": "Quality level (1-100)",
                        "name": "quality",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Target width in pixels (0 = no resize)",
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Target height in pixels (0 = no resize)",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "jpeg",
                            "png",
                            "webp",
                            "gif",
                            "avif"
                        ],
                        "type": "string",
                        "description": "Target format",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "type": "file",
                        "description": "Image files to optimize (multiple files)",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch optimization results",
                        "schema": {
                            "$ref": "#/definitions/routes.BatchOptimizeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or no files provided",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Batch processing error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/optimize": {
            "post": {
                "description": "Optimize an image file or URL with custom quality, dimensions, and format",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "image/jpeg",
                    "image/png",
                    "image/webp",
                    "image/gif",
                    "image/avif"
                ],
                "tags": [
                    "optimization"
                ],
                "summary": "Optimize an image",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 80,
                        "description": "Quality level (1-100)",
                        "name": "quality",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Target width in pixels (0 = no resize)",
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Target height in pixels (0 = no resize)",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "jpeg",
                            "png",
                            "webp",
                            "gif",
                            "avif"
                        ],
                        "type": "string",
                        "description": "Target format",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Return optimized image file instead of JSON metadata",
                        "name": "returnImage",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Enable lossless mode (perfect quality preservation)",
                        "name": "losslessMode",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "nearest",
                            "bilinear",
                            "bicubic",
                            "nohalo",
                            "vsqbs",
                            "lanczos2",
                            "lanczos3"
                        ],
                        "type": "string",
                        "description": "Resizing interpolation algorithm",
                        "name": "interpolator",
                        "in": "query"
                    },
                    {
                        "type": "file",
                        "description": "Image file to optimize (multipart upload)",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Image URL to fetch and optimize (alternative to file upload)",
                        "name": "url",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Optimized image file (when returnImage=true)",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters or file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "URL domain not allowed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "413": {
                        "description": "File too large (max 10MB)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Image processing error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.APIKey": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "revoked_at": {
                    "type": "string"
                }
            }
        },
        "routes.BatchImageResult": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "optimizedSize": {
                    "type": "integer"
                },
                "originalSize": {
                    "type": "integer"
                },
                "savings": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "routes.BatchOptimizeResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routes.BatchImageResult"
                    }
                },
                "summary": {
                    "type": "object",
                    "properties": {
                        "failed": {
                            "type": "integer"
                        },
                        "processingTime": {
                            "type": "string"
                        },
                        "successful": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        },
                        "totalOptimizedSize": {
                            "type": "integer"
                        },
                        "totalOriginalSize": {
                            "type": "integer"
                        },
                        "totalSavings": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "services.OptimizeResult": {
            "type": "object",
            "properties": {
                "alreadyOptimized": {
                    "description": "True if original was returned due to better compression",
                    "type": "boolean"
                },
                "colorSpace": {
                    "description": "Color space of the result (srgb, p3, etc)",
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "message": {
                    "description": "Optional message about optimization",
                    "type": "string"
                },
                "optimizedSize": {
                    "type": "integer"
                },
                "originalColorSpace": {
                    "description": "Original image color space",
                    "type": "string"
                },
                "originalSize": {
                    "type": "integer"
                },
                "processingTime": {
                    "type": "string"
                },
                "savings": {
                    "type": "string"
                },
                "wideGamut": {
                    "description": "True if image uses colors beyond sRGB",
                    "type": "boolean"
                },
                "width": {
                    "type": "integer"
                }
            }
        }
    }
}