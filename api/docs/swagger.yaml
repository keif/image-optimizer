basePath: /
definitions:
  db.APIKey:
    properties:
      created_at:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      revoked_at:
        type: string
    type: object
  routes.BatchImageResult:
    properties:
      error:
        type: string
      filename:
        type: string
      format:
        type: string
      height:
        type: integer
      optimizedSize:
        type: integer
      originalSize:
        type: integer
      savings:
        type: string
      success:
        type: boolean
      width:
        type: integer
    type: object
  routes.BatchOptimizeResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/routes.BatchImageResult'
        type: array
      summary:
        properties:
          failed:
            type: integer
          processingTime:
            type: string
          successful:
            type: integer
          total:
            type: integer
          totalOptimizedSize:
            type: integer
          totalOriginalSize:
            type: integer
          totalSavings:
            type: string
        type: object
    type: object
  routes.PackSpritesResponse:
    properties:
      metadata:
        description: Metadata for each sheet
        items:
          $ref: '#/definitions/routes.SheetMetadata'
        type: array
      outputFiles:
        additionalProperties:
          type: string
        description: Format name -> file content
        type: object
      sheets:
        description: Base64-encoded PNG images
        items:
          type: string
        type: array
      totalSprites:
        type: integer
    type: object
  routes.SheetMetadata:
    properties:
      efficiency:
        type: number
      height:
        type: integer
      index:
        type: integer
      spriteCount:
        type: integer
      width:
        type: integer
    type: object
  services.OptimizeResult:
    properties:
      alreadyOptimized:
        description: True if original was returned due to better compression
        type: boolean
      colorSpace:
        description: Color space of the result (srgb, p3, etc)
        type: string
      format:
        type: string
      height:
        type: integer
      message:
        description: Optional message about optimization
        type: string
      optimizedSize:
        type: integer
      originalColorSpace:
        description: Original image color space
        type: string
      originalSize:
        type: integer
      processingTime:
        type: string
      savings:
        type: string
      wideGamut:
        description: True if image uses colors beyond sRGB
        type: boolean
      width:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://github.com/keif/image-optimizer/issues
  description: High-performance image optimization service with format conversion,
    resizing, and quality adjustment
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Image Optimizer API
  version: "1.0"
paths:
  /api/keys:
    get:
      description: Get a list of all API keys (excluding actual key values for security)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.APIKey'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List all API keys
      tags:
      - api-keys
    post:
      consumes:
      - application/json
      description: Create a new API key with a given name
      parameters:
      - description: API key name
        in: body
        name: body
        required: true
        schema:
          properties:
            name:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.APIKey'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new API key
      tags:
      - api-keys
  /api/keys/{id}:
    delete:
      description: Revoke an API key by its ID
      parameters:
      - description: API Key ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Revoke an API key
      tags:
      - api-keys
  /batch-optimize:
    post:
      consumes:
      - multipart/form-data
      description: Optimize multiple image files with the same quality, dimensions,
        and format settings
      parameters:
      - default: 80
        description: Quality level (1-100)
        in: query
        maximum: 100
        minimum: 1
        name: quality
        type: integer
      - default: 0
        description: Target width in pixels (0 = no resize)
        in: query
        minimum: 0
        name: width
        type: integer
      - default: 0
        description: Target height in pixels (0 = no resize)
        in: query
        minimum: 0
        name: height
        type: integer
      - description: Target format
        enum:
        - jpeg
        - png
        - webp
        - gif
        - avif
        in: query
        name: format
        type: string
      - description: Image files to optimize (multiple files)
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Batch optimization results
          schema:
            $ref: '#/definitions/routes.BatchOptimizeResponse'
        "400":
          description: Invalid parameters or no files provided
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Batch processing error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Optimize multiple images in a single request
      tags:
      - optimization
  /optimize:
    post:
      consumes:
      - multipart/form-data
      description: Optimize an image file or URL with custom quality, dimensions,
        and format
      parameters:
      - default: 80
        description: Quality level (1-100)
        in: query
        maximum: 100
        minimum: 1
        name: quality
        type: integer
      - default: 0
        description: Target width in pixels (0 = no resize)
        in: query
        minimum: 0
        name: width
        type: integer
      - default: 0
        description: Target height in pixels (0 = no resize)
        in: query
        minimum: 0
        name: height
        type: integer
      - description: Target format
        enum:
        - jpeg
        - png
        - webp
        - gif
        - avif
        in: query
        name: format
        type: string
      - default: false
        description: Return optimized image file instead of JSON metadata
        in: query
        name: returnImage
        type: boolean
      - default: false
        description: Enable lossless mode (perfect quality preservation)
        in: query
        name: losslessMode
        type: boolean
      - description: Resizing interpolation algorithm
        enum:
        - nearest
        - bilinear
        - bicubic
        - nohalo
        - vsqbs
        - lanczos2
        - lanczos3
        in: query
        name: interpolator
        type: string
      - description: Image file to optimize (multipart upload)
        in: formData
        name: image
        type: file
      - description: Image URL to fetch and optimize (alternative to file upload)
        in: formData
        name: url
        type: string
      produces:
      - application/json
      - image/jpeg
      - image/png
      - image/webp
      - image/gif
      - image/avif
      responses:
        "200":
          description: Optimized image file (when returnImage=true)
          schema:
            type: file
        "400":
          description: Invalid parameters or file
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: URL domain not allowed
          schema:
            additionalProperties:
              type: string
            type: object
        "413":
          description: File too large (max 10MB)
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Image processing error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Optimize an image
      tags:
      - optimization
  /pack-sprites:
    post:
      consumes:
      - multipart/form-data
      description: Accepts multiple image files and packs them into one or more optimized
        spritesheets using the MaxRects bin packing algorithm
      parameters:
      - description: Sprite images to pack (multiple files supported)
        in: formData
        name: images
        required: true
        type: file
      - default: 2
        description: Padding between sprites in pixels
        in: query
        name: padding
        type: integer
      - default: false
        description: Force power-of-2 dimensions (256, 512, 1024, etc.)
        in: query
        name: powerOfTwo
        type: boolean
      - default: false
        description: Trim transparent pixels from sprites
        in: query
        name: trimTransparency
        type: boolean
      - default: 2048
        description: Maximum sheet width in pixels
        in: query
        name: maxWidth
        type: integer
      - default: 2048
        description: Maximum sheet height in pixels
        in: query
        name: maxHeight
        type: integer
      - default: '"json"'
        description: 'Comma-separated list of output formats: json,css,csv,xml,unity,godot'
        in: query
        name: outputFormats
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.PackSpritesResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Pack multiple sprites into optimized spritesheets
      tags:
      - spritesheet
  /spritesheet/formats:
    get:
      description: Returns a list of all supported output formats for spritesheet
        coordinate data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get supported spritesheet output formats
      tags:
      - spritesheet
schemes:
- http
- https
swagger: "2.0"
